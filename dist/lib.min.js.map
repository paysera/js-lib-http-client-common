{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///lib.min.js","webpack:///webpack/bootstrap 774858f2cdaf83c34332?103a*","webpack:///./~/global/window.js?7ff2","webpack:///./src/module.js?6f58","webpack:///./~/setimmediate/setImmediate.js?4a80","webpack:///./~/timers-browserify/main.js?b088","webpack:///external \"axios\"?2539","webpack:///./src/entity/Entity.js?fe59","webpack:///(webpack)/buildin/global.js?3698*","webpack:///./src/entity/Request.js?b784","webpack:///./src/service/ClientWrapper.js?6ea1","webpack:///./~/process/browser.js?82e4","webpack:///./~/q/q.js?bb27","webpack:///./src/entity/Filter.js?7cb6","webpack:///./src/entity/Result.js?628c","webpack:///./src/entity/Scope.js?0886","webpack:///./src/entity/Token.js?5e52","webpack:///./src/service/ClientFactoryBase.js?e0a1","webpack:///./src/service/RequestFactory.js?0f9a","webpack:///./src/service/TokenProvider.js?4957"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_107__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","103","global","win","window","self","104","_interopRequireDefault","obj","default","TokenProvider","ClientFactoryBase","ClientWrapper","RequestFactory","Result","Request","Filter","Entity","Token","Scope","undefined","_Scope","_Scope2","_Token","_Token2","_Entity","_Entity2","_Filter","_Filter2","_Request","_Request2","_Result","_Result2","_RequestFactory","_RequestFactory2","_TokenProvider","_TokenProvider2","_ClientWrapper","_ClientWrapper2","_ClientFactoryBase","_ClientFactoryBase2","105","process","setImmediate","callback","Function","args","Array","arguments","length","task","tasksByHandle","nextHandle","registerImmediate","clearImmediate","handle","run","apply","runIfPresent","currentlyRunningATask","setTimeout","doc","document","attachTo","getPrototypeOf","toString","nextTick","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","Math","random","onGlobalMessage","event","source","data","indexOf","slice","addEventListener","attachEvent","MessageChannel","channel","port1","port2","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","106","Timeout","id","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","107","29","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","33","g","eval","e","44","method","path","parameters","body","45","_q","_q2","client","options","token","AUTH_HTTP_CODES","provider","tokenProvider","_this","getTokenProvider","when","getToken","then","request","_this2","repeat","headers","Authorization","getTokenValue","url","params","result","catch","error","response","status","refreshTokenProvider","getScope","refreshedToken","setToken","performRequest","53","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","Item","array","noop","push","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","54","definition","bootstrap","uncurryThis","f","isObject","isStopIteration","exception","object_toString","QReturnValue","makeStackTraceLong","promise","hasStacks","stack","stacks","__minimumStackCounter__","stackCounter","object_defineProperty","unshift","concatedStacks","join","STACK_JUMP_SEPARATOR","filterStackString","stackString","lines","split","desiredLines","line","isInternalFrame","isNodeFrame","stackLine","getFileNameAndLineNumber","attempt1","exec","Number","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qFileName","qStartingLine","qEndingLine","captureLine","firstLine","Q","Promise","isPromiseAlike","coerce","fulfill","defer","become","newPromise","resolvedPromise","longStackSupport","array_reduce","messages","message","promiseDispatch","progressListeners","deferred","object_create","resolve","op","operands","array_slice","valueOf","nearerValue","nearer","isPromise","inspect","state","substring","longStackCounter","reject","reason","notify","progress","progressListener","resolver","race","answerPs","fallback","inspected","fulfilled","rejected","progressed","isPending","isFulfilled","isRejected","resetUnhandledRejections","unhandledReasons","unhandledRejections","trackUnhandledRejections","trackRejection","runAfter","array_indexOf","reportedUnhandledRejections","untrackRejection","at","atReport","splice","rejection","set","rhs","delete","post","thisp","keys","object_keys","master","isDef","dispatch","spread","async","makeGenerator","continuer","verb","arg","StopIteration","generator","done","errback","bind","spawn","_return","promised","all","promises","pendingCount","index","snapshot","any","prev","current","onFulfilled","onRejected","err","onProgress","allResolved","array_map","allSettled","nodeify","nodeback","flush","domain","head","next","enter","runSingle","laterQueue","pop","flushing","isNodeJS","exit","tail","requestTick","requestPortTick","reduce","basis","map","collect","create","Type","prop","object_hasOwnProperty","ReturnValue","Q_DEBUG","makeNodeResolver","passByCopy","x","y","that","makePromise","_fulfilled","_rejected","newException","_progressed","newValue","threw","onerror","tap","fcall","thenResolve","thenReject","getUnhandledReasons","stopUnhandledRejectionTracking","del","mapply","send","mcall","invoke","fapply","fbind","alternative","console","warn","regardless","fail","fin","onUnhandledError","ms","timeoutId","code","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","bound","nmapply","npost","nsend","nmcall","ninvoke","noConflict","55","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","_Entity3","limit","offset","orderBy","orderDirection","56","dataKey","metadataKey","Symbol","iterator","regeneratorRuntime","mark","wrap","_context","delegateYield","getItems","abrupt","t0","stop","createItem","getMetadata","total","57","58","scope","59","_axios","_axios2","baseUrl","getBaseUrl","baseURL","60","entity","lowerCaseMethod","toLowerCase","payload","getData","61"],"mappings":"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","file":"lib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"payseraHttpClientCommon\"] = factory(require(\"axios\"));\n\telse\n\t\troot[\"payseraHttpClientCommon\"] = factory(root[\"axios\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_107__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"payseraHttpClientCommon\"] = factory(require(\"axios\"));\n\telse\n\t\troot[\"payseraHttpClientCommon\"] = factory(root[\"axios\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_107__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 104);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 103:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33)))\n\n/***/ }),\n\n/***/ 104:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TokenProvider = exports.ClientFactoryBase = exports.ClientWrapper = exports.RequestFactory = exports.Result = exports.Request = exports.Filter = exports.Entity = exports.Token = exports.Scope = undefined;\n\nvar _Scope = __webpack_require__(57);\n\nvar _Scope2 = _interopRequireDefault(_Scope);\n\nvar _Token = __webpack_require__(58);\n\nvar _Token2 = _interopRequireDefault(_Token);\n\nvar _Entity = __webpack_require__(29);\n\nvar _Entity2 = _interopRequireDefault(_Entity);\n\nvar _Filter = __webpack_require__(55);\n\nvar _Filter2 = _interopRequireDefault(_Filter);\n\nvar _Request = __webpack_require__(44);\n\nvar _Request2 = _interopRequireDefault(_Request);\n\nvar _Result = __webpack_require__(56);\n\nvar _Result2 = _interopRequireDefault(_Result);\n\nvar _RequestFactory = __webpack_require__(60);\n\nvar _RequestFactory2 = _interopRequireDefault(_RequestFactory);\n\nvar _TokenProvider = __webpack_require__(61);\n\nvar _TokenProvider2 = _interopRequireDefault(_TokenProvider);\n\nvar _ClientWrapper = __webpack_require__(45);\n\nvar _ClientWrapper2 = _interopRequireDefault(_ClientWrapper);\n\nvar _ClientFactoryBase = __webpack_require__(59);\n\nvar _ClientFactoryBase2 = _interopRequireDefault(_ClientFactoryBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Scope = _Scope2.default;\nexports.Token = _Token2.default;\nexports.Entity = _Entity2.default;\nexports.Filter = _Filter2.default;\nexports.Request = _Request2.default;\nexports.Result = _Result2.default;\nexports.RequestFactory = _RequestFactory2.default;\nexports.ClientWrapper = _ClientWrapper2.default;\nexports.ClientFactoryBase = _ClientFactoryBase2.default;\nexports.TokenProvider = _TokenProvider2.default;\n\n/***/ }),\n\n/***/ 105:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33), __webpack_require__(53)))\n\n/***/ }),\n\n/***/ 106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(105);\nvar global = __webpack_require__(103);\nexports.setImmediate = global.setImmediate;\nexports.clearImmediate = global.clearImmediate;\n\n\n/***/ }),\n\n/***/ 107:\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_107__;\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Entity = function () {\n\n    /**\n     * @param {object} data\n     */\n    function Entity() {\n        var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, Entity);\n\n        this.data = data;\n    }\n\n    /**\n     * @param {string} key\n     * @param {string} value\n     */\n\n\n    _createClass(Entity, [{\n        key: 'set',\n        value: function set(key, value) {\n            this.data[key] = value;\n        }\n\n        /**\n         * @param {string} key\n         * @returns {string|null}\n         */\n\n    }, {\n        key: 'get',\n        value: function get(key) {\n            return typeof this.data[key] !== 'undefined' ? this.data[key] : null;\n        }\n\n        /**\n         * @returns {*}\n         */\n\n    }, {\n        key: 'getData',\n        value: function getData() {\n            return this.data;\n        }\n    }]);\n\n    return Entity;\n}();\n\nexports.default = Entity;\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Request =\n\n/**\n * @param {string} method\n * @param {string} path\n * @param {(object|null)} parameters\n * @param {(object|null)} body\n */\nfunction Request(method, path, parameters, body) {\n    _classCallCheck(this, Request);\n\n    this.method = method;\n    this.path = path;\n    this.parameters = parameters;\n    this.body = body;\n};\n\nexports.default = Request;\n\n/***/ }),\n\n/***/ 45:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _q = __webpack_require__(54);\n\nvar _q2 = _interopRequireDefault(_q);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClientWrapper = function () {\n\n    /**\n     * @param {Axios} client\n     * @param {object} options\n     */\n    function ClientWrapper(client, options) {\n        _classCallCheck(this, ClientWrapper);\n\n        this.client = client;\n        this.options = options;\n        this.token = null;\n\n        this.AUTH_HTTP_CODES = [401, 403];\n    }\n\n    /**\n     * @param {TokenProvider} provider\n     */\n\n\n    _createClass(ClientWrapper, [{\n        key: 'setTokenProvider',\n        value: function setTokenProvider() {\n            var provider = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n            this.tokenProvider = provider;\n        }\n\n        /**\n         * @returns {TokenProvider|null}\n         */\n\n    }, {\n        key: 'getTokenProvider',\n        value: function getTokenProvider() {\n            return this.tokenProvider;\n        }\n\n        /**\n         * @param {Token} token\n         */\n\n    }, {\n        key: 'setToken',\n        value: function setToken(token) {\n            this.token = token;\n        }\n\n        /**\n         * @returns {Promise.<Token|null>}\n         */\n\n    }, {\n        key: 'getToken',\n        value: function getToken() {\n            var _this = this;\n\n            if (this.token === null) {\n                var provider = this.getTokenProvider();\n\n                if (provider === null) {\n                    return _q2.default.when(null);\n                }\n\n                return provider.getToken().then(function (token) {\n                    _this.token = token;\n                    return _this.token;\n                });\n            }\n\n            return _q2.default.when(this.token);\n        }\n\n        /**\n         * @param {Request} request\n         * @param {boolean} repeat\n         *\n         * @returns {Promise.<*>}\n         */\n\n    }, {\n        key: 'performRequest',\n        value: function performRequest(request) {\n            var _this2 = this;\n\n            var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var headers = {};\n\n            return this.getToken().then(function (token) {\n                if (token !== null) {\n                    headers.Authorization = token.getTokenValue();\n                }\n\n                return _this2.client({\n                    method: request.method,\n                    url: request.path,\n                    data: request.body,\n                    params: request.parameters,\n                    headers: headers\n                }).then(function (result) {\n                    return result.data;\n                }).catch(function (error) {\n                    if (error.response && _this2.AUTH_HTTP_CODES.indexOf(error.response.status) !== -1 && typeof _this2.options.refreshTokenProvider !== 'undefined' && token !== null && repeat) {\n                        return _this2.options.refreshTokenProvider(token.getScope()).then(function (refreshedToken) {\n                            _this2.setToken(refreshedToken);\n                            return _this2.performRequest(request, false);\n                        });\n                    }\n\n                    throw error;\n                });\n            });\n        }\n    }]);\n\n    return ClientWrapper;\n}();\n\nexports.default = ClientWrapper;\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (true) {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.toString()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_defineProperty = Object.defineProperty || function (obj, prop, descriptor) {\n    obj[prop] = descriptor.value;\n    return obj;\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {\n                object_defineProperty(error, \"__minimumStackCounter__\", {value: p.stackCounter, configurable: true});\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        var stack = filterStackString(concatedStacks);\n        object_defineProperty(error, \"stack\", {value: stack, configurable: true});\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * The counter is used to determine the stopping point for building\n * long stack traces. In makeStackTraceLong we walk backwards through\n * the linked list of promises, only stacks which were created before\n * the rejection are concatenated.\n */\nvar longStackCounter = 1;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n            promise.stackCounter = longStackCounter++;\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n\n        if (Q.longStackSupport && hasStacks) {\n            // Only hold a reference to the new promise if long stacks\n            // are enabled to reduce memory usage\n            promise.source = newPromise;\n        }\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected(err) {\n            pendingCount--;\n            if (pendingCount === 0) {\n                err.message = (\"Q can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected. Last error message: \" + err.message);\n                deferred.reject(err);\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n        throw new Error(\"Q can't apply finally callback\");\n    }\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    if (callback === undefined) {\n        throw new Error(\"Q can't wrap an undefined function\");\n    }\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(53), __webpack_require__(106).setImmediate))\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Entity2 = __webpack_require__(29);\n\nvar _Entity3 = _interopRequireDefault(_Entity2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Filter = function (_Entity) {\n    _inherits(Filter, _Entity);\n\n    function Filter() {\n        _classCallCheck(this, Filter);\n\n        return _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).apply(this, arguments));\n    }\n\n    _createClass(Filter, [{\n        key: 'setLimit',\n        value: function setLimit(limit) {\n            this.set('limit', limit);\n        }\n    }, {\n        key: 'getLimit',\n        value: function getLimit() {\n            return this.get('limit');\n        }\n    }, {\n        key: 'setOffset',\n        value: function setOffset(offset) {\n            this.set('offset', offset);\n        }\n    }, {\n        key: 'getOffset',\n        value: function getOffset() {\n            return this.get('offset');\n        }\n    }, {\n        key: 'setOrderBy',\n        value: function setOrderBy(orderBy) {\n            this.set('order_by', orderBy);\n        }\n    }, {\n        key: 'getOrderBy',\n        value: function getOrderBy() {\n            return this.get('order_by');\n        }\n    }, {\n        key: 'setOrderDirection',\n        value: function setOrderDirection(orderDirection) {\n            this.set('order_direction', orderDirection);\n        }\n    }, {\n        key: 'getOrderDirection',\n        value: function getOrderDirection() {\n            return this.get('order_direction');\n        }\n    }]);\n\n    return Filter;\n}(_Entity3.default);\n\nexports.default = Filter;\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Entity2 = __webpack_require__(29);\n\nvar _Entity3 = _interopRequireDefault(_Entity2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Result = function (_Entity) {\n    _inherits(Result, _Entity);\n\n    /**\n     * @param {object} data\n     * @param {string} dataKey\n     */\n    function Result(data) {\n        var dataKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'items';\n\n        _classCallCheck(this, Result);\n\n        var _this = _possibleConstructorReturn(this, (Result.__proto__ || Object.getPrototypeOf(Result)).call(this, data));\n\n        _this.dataKey = dataKey;\n        _this.metadataKey = '_metadata';\n        return _this;\n    }\n\n    _createClass(Result, [{\n        key: Symbol.iterator,\n        value: regeneratorRuntime.mark(function value() {\n            return regeneratorRuntime.wrap(function value$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            return _context.delegateYield(this.getItems(), 't0', 1);\n\n                        case 1:\n                            return _context.abrupt('return', _context.t0);\n\n                        case 2:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, value, this);\n        })\n\n        /**\n         * @returns {Array.|null}\n         */\n\n    }, {\n        key: 'getItems',\n        value: function getItems() {\n            var _this2 = this;\n\n            return typeof this.data[this.dataKey] !== 'undefined' ? this.data[this.dataKey].map(function (item) {\n                return _this2.createItem(item);\n            }) : [];\n        }\n\n        /**\n         * @returns {object|null}\n         */\n\n    }, {\n        key: 'getMetadata',\n        value: function getMetadata() {\n            return typeof this.data[this.metadataKey] !== 'undefined' ? this.data[this.metadataKey] : null;\n        }\n\n        /**\n         * @returns {int|null}\n         */\n\n    }, {\n        key: 'getTotal',\n        value: function getTotal() {\n            if (this.getMetadata() !== null) {\n                return typeof this.getMetadata().total !== 'undefined' ? this.getMetadata().total : null;\n            }\n            return null;\n        }\n\n        /**\n         * @returns {int|null}\n         */\n\n    }, {\n        key: 'getOffset',\n        value: function getOffset() {\n            if (this.getMetadata() !== null) {\n                return typeof this.getMetadata().offset !== 'undefined' ? this.getMetadata().offset : null;\n            }\n            return null;\n        }\n\n        /**\n         * @returns {int|null}\n         */\n\n    }, {\n        key: 'getLimit',\n        value: function getLimit() {\n            if (this.getMetadata() !== null) {\n                return typeof this.getMetadata().limit !== 'undefined' ? this.getMetadata().limit : null;\n            }\n            return null;\n        }\n\n        /**\n         * @param {object} data\n         * @returns {Entity}\n         */\n\n    }, {\n        key: 'createItem',\n        value: function createItem(data) {\n            return new _Entity3.default(data);\n        }\n    }]);\n\n    return Result;\n}(_Entity3.default);\n\nexports.default = Result;\n\n/***/ }),\n\n/***/ 57:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Scope = function () {\n\n    /**\n     * @param {string} value\n     */\n    function Scope(value) {\n        _classCallCheck(this, Scope);\n\n        this.value = value;\n    }\n\n    /**\n     * @returns {string}\n     */\n\n\n    _createClass(Scope, [{\n        key: \"getValue\",\n        value: function getValue() {\n            return this.value;\n        }\n    }]);\n\n    return Scope;\n}();\n\nexports.default = Scope;\n\n/***/ }),\n\n/***/ 58:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Token = function () {\n\n    /**\n     * @param {Scope} scope\n     * @param {string} token\n     */\n    function Token(scope, token) {\n        _classCallCheck(this, Token);\n\n        this.scope = scope;\n        this.token = token;\n    }\n\n    /**\n     * @returns {Scope}\n     */\n\n\n    _createClass(Token, [{\n        key: \"getScope\",\n        value: function getScope() {\n            return this.scope;\n        }\n\n        /**\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getTokenValue\",\n        value: function getTokenValue() {\n            return this.token;\n        }\n    }]);\n\n    return Token;\n}();\n\nexports.default = Token;\n\n/***/ }),\n\n/***/ 59:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _axios = __webpack_require__(107);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _ClientWrapper = __webpack_require__(45);\n\nvar _ClientWrapper2 = _interopRequireDefault(_ClientWrapper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClientFactoryBase = function () {\n    function ClientFactoryBase() {\n        _classCallCheck(this, ClientFactoryBase);\n    }\n\n    _createClass(ClientFactoryBase, [{\n        key: 'getClient',\n\n\n        /**\n         * @param {object|null} options\n         * @returns {ClientWrapper}\n         */\n        value: function getClient() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n            var baseUrl = options && options.baseUrl !== 'undefined' ? options.baseUrl : this.getBaseUrl();\n            var instance = _axios2.default.create({\n                baseURL: baseUrl\n            });\n\n            return new _ClientWrapper2.default(instance, options);\n        }\n    }]);\n\n    return ClientFactoryBase;\n}();\n\nexports.default = ClientFactoryBase;\n\n/***/ }),\n\n/***/ 60:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Request = __webpack_require__(44);\n\nvar _Request2 = _interopRequireDefault(_Request);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RequestFactory = function () {\n    function RequestFactory() {\n        _classCallCheck(this, RequestFactory);\n    }\n\n    _createClass(RequestFactory, null, [{\n        key: 'create',\n\n\n        /**\n         * @param {string} method\n         * @param {string} path\n         * @param {Entity|null} entity\n         *\n         * @returns {Request}\n         */\n        value: function create(method, path) {\n            var entity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var lowerCaseMethod = method.toLowerCase();\n            var parameters = null;\n            var payload = null;\n\n            if (entity !== null) {\n                payload = entity.getData();\n            }\n\n            if (lowerCaseMethod === 'get') {\n                parameters = payload;\n                payload = null;\n            }\n\n            return new _Request2.default(lowerCaseMethod, path, parameters, payload);\n        }\n    }]);\n\n    return RequestFactory;\n}();\n\nexports.default = RequestFactory;\n\n/***/ }),\n\n/***/ 61:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _q = __webpack_require__(54);\n\nvar _q2 = _interopRequireDefault(_q);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TokenProvider = function () {\n\n    /**\n     * @param {Scope} scope\n     * @param {callback|null} provider\n     */\n    function TokenProvider(scope) {\n        var provider = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, TokenProvider);\n\n        this.scope = scope;\n        this.provider = provider;\n    }\n\n    /**\n     * @returns {Promise.<null>}\n     */\n\n\n    _createClass(TokenProvider, [{\n        key: 'getToken',\n        value: function getToken() {\n            return _q2.default.when(typeof this.provider === 'function' ? this.provider(this.scope) : null);\n        }\n    }]);\n\n    return TokenProvider;\n}();\n\nexports.default = TokenProvider;\n\n/***/ })\n\n/******/ });\n});\n\n\n// WEBPACK FOOTER //\n// lib.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 104);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 774858f2cdaf83c34332","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/global/window.js\n// module id = 103\n// module chunks = 1 2","import Scope from './entity/Scope';\nimport Token from './entity/Token';\nimport Entity from './entity/Entity';\nimport Filter from './entity/Filter';\nimport Request from './entity/Request';\nimport Result from './entity/Result';\n\nimport RequestFactory from './service/RequestFactory';\nimport TokenProvider from './service/TokenProvider';\nimport ClientWrapper from './service/ClientWrapper';\nimport ClientFactoryBase from './service/ClientFactoryBase';\n\nexport {\n    Scope,\n    Token,\n    Entity,\n    Filter,\n    Request,\n    Result,\n    RequestFactory,\n    ClientWrapper,\n    ClientFactoryBase,\n    TokenProvider,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/module.js","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 105\n// module chunks = 1 2","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nvar global = require(\"global\");\nexports.setImmediate = global.setImmediate;\nexports.clearImmediate = global.clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 106\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_107__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 107\n// module chunks = 1 2","class Entity {\n\n    /**\n     * @param {object} data\n     */\n    constructor(data = {}) {\n        this.data = data;\n    }\n\n    /**\n     * @param {string} key\n     * @param {string} value\n     */\n    set(key, value) {\n        this.data[key] = value;\n    }\n\n    /**\n     * @param {string} key\n     * @returns {string|null}\n     */\n    get(key) {\n        return typeof this.data[key] !== 'undefined' ? this.data[key] : null;\n    }\n\n    /**\n     * @returns {*}\n     */\n    getData() {\n        return this.data;\n    }\n}\n\nexport default Entity;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/Entity.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 33\n// module chunks = 0 1 2","class Request {\n\n    /**\n     * @param {string} method\n     * @param {string} path\n     * @param {(object|null)} parameters\n     * @param {(object|null)} body\n     */\n    constructor(method, path, parameters, body) {\n        this.method = method;\n        this.path = path;\n        this.parameters = parameters;\n        this.body = body;\n    }\n}\n\nexport default Request;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/Request.js","import Q from 'q';\n\nclass ClientWrapper {\n\n    /**\n     * @param {Axios} client\n     * @param {object} options\n     */\n    constructor(client, options) {\n        this.client = client;\n        this.options = options;\n        this.token = null;\n\n        this.AUTH_HTTP_CODES = [401, 403];\n    }\n\n    /**\n     * @param {TokenProvider} provider\n     */\n    setTokenProvider(provider = null) {\n        this.tokenProvider = provider;\n    }\n\n    /**\n     * @returns {TokenProvider|null}\n     */\n    getTokenProvider() {\n        return this.tokenProvider;\n    }\n\n    /**\n     * @param {Token} token\n     */\n    setToken(token) {\n        this.token = token;\n    }\n\n    /**\n     * @returns {Promise.<Token|null>}\n     */\n    getToken() {\n        if (this.token === null) {\n            const provider = this.getTokenProvider();\n\n            if (provider === null) {\n                return Q.when(null);\n            }\n\n            return provider.getToken().then((token) => {\n                this.token = token;\n                return this.token;\n            });\n        }\n\n        return Q.when(this.token);\n    }\n\n    /**\n     * @param {Request} request\n     * @param {boolean} repeat\n     *\n     * @returns {Promise.<*>}\n     */\n    performRequest(request, repeat = true) {\n        const headers = {};\n\n        return this.getToken().then((token) => {\n            if (token !== null) {\n                headers.Authorization = token.getTokenValue();\n            }\n\n            return this.client({\n                method: request.method,\n                url: request.path,\n                data: request.body,\n                params: request.parameters,\n                headers,\n            }).then((result) => {\n                return result.data;\n            }).catch((error) => {\n                if (\n                    error.response\n                    && this.AUTH_HTTP_CODES.indexOf(error.response.status) !== -1\n                    && typeof this.options.refreshTokenProvider !== 'undefined'\n                    && token !== null\n                    && repeat\n                ) {\n                    return this.options.refreshTokenProvider(token.getScope())\n                        .then((refreshedToken) => {\n                            this.setToken(refreshedToken);\n                            return this.performRequest(request, false);\n                        });\n                }\n\n                throw error;\n            });\n        });\n    }\n}\n\nexport default ClientWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/ClientWrapper.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 53\n// module chunks = 1 2","// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.toString()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_defineProperty = Object.defineProperty || function (obj, prop, descriptor) {\n    obj[prop] = descriptor.value;\n    return obj;\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {\n                object_defineProperty(error, \"__minimumStackCounter__\", {value: p.stackCounter, configurable: true});\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        var stack = filterStackString(concatedStacks);\n        object_defineProperty(error, \"stack\", {value: stack, configurable: true});\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * The counter is used to determine the stopping point for building\n * long stack traces. In makeStackTraceLong we walk backwards through\n * the linked list of promises, only stacks which were created before\n * the rejection are concatenated.\n */\nvar longStackCounter = 1;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n            promise.stackCounter = longStackCounter++;\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n\n        if (Q.longStackSupport && hasStacks) {\n            // Only hold a reference to the new promise if long stacks\n            // are enabled to reduce memory usage\n            promise.source = newPromise;\n        }\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected(err) {\n            pendingCount--;\n            if (pendingCount === 0) {\n                err.message = (\"Q can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected. Last error message: \" + err.message);\n                deferred.reject(err);\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n        throw new Error(\"Q can't apply finally callback\");\n    }\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    if (callback === undefined) {\n        throw new Error(\"Q can't wrap an undefined function\");\n    }\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/q/q.js\n// module id = 54\n// module chunks = 1 2","import Entity from './Entity';\n\nclass Filter extends Entity {\n\n    setLimit(limit) {\n        this.set('limit', limit);\n    }\n\n    getLimit() {\n        return this.get('limit');\n    }\n\n    setOffset(offset) {\n        this.set('offset', offset);\n    }\n\n    getOffset() {\n        return this.get('offset');\n    }\n\n    setOrderBy(orderBy) {\n        this.set('order_by', orderBy);\n    }\n\n    getOrderBy() {\n        return this.get('order_by');\n    }\n\n    setOrderDirection(orderDirection) {\n        this.set('order_direction', orderDirection);\n    }\n\n    getOrderDirection() {\n        return this.get('order_direction');\n    }\n}\n\nexport default Filter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/Filter.js","import Entity from './Entity';\n\nclass Result extends Entity {\n\n    /**\n     * @param {object} data\n     * @param {string} dataKey\n     */\n    constructor(data, dataKey = 'items') {\n        super(data);\n        this.dataKey = dataKey;\n        this.metadataKey = '_metadata';\n    }\n\n    * [Symbol.iterator]() {\n        return yield* this.getItems();\n    }\n\n    /**\n     * @returns {Array.|null}\n     */\n    getItems() {\n        return typeof this.data[this.dataKey] !== 'undefined'\n            ? this.data[this.dataKey].map(item => this.createItem(item))\n            : []\n        ;\n    }\n\n    /**\n     * @returns {object|null}\n     */\n    getMetadata() {\n        return typeof this.data[this.metadataKey] !== 'undefined' ? this.data[this.metadataKey] : null;\n    }\n\n    /**\n     * @returns {int|null}\n     */\n    getTotal() {\n        if (this.getMetadata() !== null) {\n            return typeof this.getMetadata().total !== 'undefined' ? this.getMetadata().total : null;\n        }\n        return null;\n    }\n\n    /**\n     * @returns {int|null}\n     */\n    getOffset() {\n        if (this.getMetadata() !== null) {\n            return typeof this.getMetadata().offset !== 'undefined' ? this.getMetadata().offset : null;\n        }\n        return null;\n    }\n\n    /**\n     * @returns {int|null}\n     */\n    getLimit() {\n        if (this.getMetadata() !== null) {\n            return typeof this.getMetadata().limit !== 'undefined' ? this.getMetadata().limit : null;\n        }\n        return null;\n    }\n\n    /**\n     * @param {object} data\n     * @returns {Entity}\n     */\n    createItem(data) {\n        return new Entity(data);\n    }\n}\n\nexport default Result;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/Result.js","class Scope {\n\n    /**\n     * @param {string} value\n     */\n    constructor(value) {\n        this.value = value;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getValue() {\n        return this.value;\n    }\n}\n\nexport default Scope;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/Scope.js","class Token {\n\n    /**\n     * @param {Scope} scope\n     * @param {string} token\n     */\n    constructor(scope, token) {\n        this.scope = scope;\n        this.token = token;\n    }\n\n    /**\n     * @returns {Scope}\n     */\n    getScope() {\n        return this.scope;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getTokenValue() {\n        return this.token;\n    }\n}\n\nexport default Token;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity/Token.js","import axios from 'axios';\n\nimport ClientWrapper from './ClientWrapper';\n\nclass ClientFactoryBase {\n\n    /**\n     * @param {object|null} options\n     * @returns {ClientWrapper}\n     */\n    getClient(options = null) {\n        const baseUrl = options && options.baseUrl !== 'undefined' ? options.baseUrl : this.getBaseUrl();\n        const instance = axios.create({\n            baseURL: baseUrl,\n        });\n\n        return new ClientWrapper(instance, options);\n    }\n}\n\nexport default ClientFactoryBase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/ClientFactoryBase.js","import Request from '../entity/Request';\n\nclass RequestFactory {\n\n    /**\n     * @param {string} method\n     * @param {string} path\n     * @param {Entity|null} entity\n     *\n     * @returns {Request}\n     */\n    static create(method, path, entity = null) {\n        const lowerCaseMethod = method.toLowerCase();\n        let parameters = null;\n        let payload = null;\n\n        if (entity !== null) {\n            payload = entity.getData();\n        }\n\n        if (lowerCaseMethod === 'get') {\n            parameters = payload;\n            payload = null;\n        }\n\n        return new Request(lowerCaseMethod, path, parameters, payload);\n    }\n}\n\nexport default RequestFactory;\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/RequestFactory.js","import Q from 'q';\n\nclass TokenProvider {\n\n    /**\n     * @param {Scope} scope\n     * @param {callback|null} provider\n     */\n    constructor(scope, provider = null) {\n        this.scope = scope;\n        this.provider = provider;\n    }\n\n    /**\n     * @returns {Promise.<null>}\n     */\n    getToken() {\n        return Q.when(typeof this.provider === 'function' ? this.provider(this.scope) : null);\n    }\n}\n\nexport default TokenProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/TokenProvider.js"],"sourceRoot":""}